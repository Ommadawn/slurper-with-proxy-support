#!/usr/bin/env ruby

# Slurps stories from the given file (stories.slurper by default) and creates
# Pivotal Tracker stories from them. Useful during story carding sessions
# when you want to capture a number of stories quickly without clicking
# your way through the Tracker UI.

# Default story values and API token information should be provided in a
# ~/.slurper.yml file.

# Note that if you include labels in stories.slurper, they don't appear
# immediately in Tracker. You'll have to refresh Tracker after a few seconds
# to see them.

$:.unshift(File.join(File.dirname(File.dirname(__FILE__)),'lib'))
require 'rubygems'
require 'slurper'
require 'optparse'

options = {}
OptionParser.new do |opts|
  opts.on("-r", "--reverse", "Reverse story creation order") do |v|
    options[:reverse] = v
  end
end.parse!

story_file = ARGV.empty? ? "stories.slurper" : ARGV[0]

story_lines = Array.new
stories = Array.new
IO.foreach(story_file) do |line|
  if line[0,2] == "==" && story_lines.any?
    stories << Story.new.parse(story_lines)
    story_lines.clear
  else
    story_lines << line
  end
end

stories.reverse! unless options[:reverse]

stories.each_with_index do |story, index|
  begin
    story.save
    puts "Added \"#{story.name}\""
  rescue ActiveResource::ServerError, ActiveResource::ResourceNotFound => e
    msg = "Slurp failed on story "
    if story.attributes["name"]
      msg << story.attributes["name"]
    else
      msg << "##{options[:reverse] ? index + 1 : stories.size - index }"
    end
    puts msg + ".  Error: #{e}"
  end
end
